name: CI/CD Pipeline Backend

on:
  push:
    branches: [main, dev-backend]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-backend
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r back-end-app/requirements.txt

      - name: Run tests
        run: pytest back-end-app/tests

  build-and-push:
    needs: test
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: echos
        run: echo "${{ secrets.DB_PASSWORD }}"
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v3

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        env:
          SHORT_SHA: ${{ steps.commit.outputs.short }}
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.commit.outputs.short }}

      - name: Build, tag and push Docker image
        env:
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        uses: docker/build-push-action@v5
        with:
          context: ./back-end-app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v3

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH connection
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2

        run: |
          ssh -o StrictHostKeyChecking=no -l ubuntu 18.231.119.58 <<EOF

          IMAGE=\$(echo ghcr.io/\${{ github.repository }}-backend:\${{ steps.commit.outputs.short }} | tr '[:upper:]' '[:lower:]')

          # Stop and remove the running container

          CONTAINER_ID=\$(sudo docker ps --filter "publish=2000" -q)

          echo "Stopping container \$CONTAINER_ID"

          sudo docker stop \$CONTAINER_ID

          echo "Removing unused Docker images..."

          sudo docker image prune -a -f

          # Pull the latest image

          echo "Pulling image \$IMAGE"

          sudo docker pull \$IMAGE

          # Run the new container with environment variables
          echo "Running container \$IMAGE"

          sudo docker run -d -p 2000:2000 \\
            -e DB_USERNAME=\${{ secrets.DB_USERNAME }} \\
            -e DB_PASSWORD=\${{ secrets.DB_PASSWORD_CD }} \\
            -e DB_HOST=\${{ secrets.DB_HOST }} \\
            -e DB_PORT=\${{ secrets.DB_PORT }} \\
            -e DB_NAME=\${{ secrets.DB_NAME }} \\
            \$IMAGE

          EOF
          echo ${{ secrets.DB_PASSWORD_CD }}
