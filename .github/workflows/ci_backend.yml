name: CI Pipeline Backend

on:
  push:
    branches:
      - dev-backend
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-backend

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r back-end-app/requirements.txt

      - name: Run pytest tests
        run: |
          pytest back-end-app/tests

  build-and-push:
    needs: test
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v3

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        env:
          SHORT_SHA: ${{ steps.commit.outputs.short }}
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.commit.outputs.short }}

      - name: Build, tag and push Docker image
        env:
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        uses: docker/build-push-action@v5
        with:
          context: ./back-end-app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
